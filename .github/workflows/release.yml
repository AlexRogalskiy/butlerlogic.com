# Slack notifications can be activated by uncommenting them
# and adding the appropriate secret in the project repo settings.
name: Tag & Release

on:
  push:
    branches:
      - master

jobs:
  Process:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: butlerlogic/action-autotag@stable
      id: autotagger
      with:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
      # If the new version/tag is a pre-release (i.e. 1.0.0-beta.1), create
      # an environment variable indicating it is a prerelease.
    - name: Pre-release
      if: steps.autotagger.outputs.tagname != ''
      run: |
        if [[ "${{ steps.autotagger.output.version }}" == *"-"* ]]; then echo "::set-env IS_PRERELEASE=true";else echo "::set-env IS_PRERELEASE=''";fi
      
      # Create a github release
      # This will create a snapshot of the module,
      # available in the "Releases" section on Github.
    - name: Release
      id: release
      if: steps.autotagger.outputs.tagname != ''
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.autotagger.outputs.tagname }}
        release_name: ${{ steps.autotagger.outputs.tagname }}
        body: ${{ steps.autotagger.outputs.tagmessage }}
        draft: false
        prerelease: env.IS_PRERELEASE != ''

      # Build tarballs of the module code.
    - name: Build Release Artifacts
      id: build_release
      if: steps.release.outputs.id != ''
      run: |
        cd ./build && npm install && cd ../
        npm run build --if-present
        ls -l
        for d in dist/*/ ; do tar -cvzf ${d%%/}-${{ steps.autotagger.outputs.version }}.tar.gz ${d%%}*; done;
        if [[ ${{ github.ref }} == *"-"* ]]; then echo ::set-output isprerelease=true;else echo ::set-output isprerelease=false;fi

      # Upload tarballs to the release.
    - name: Upload Release Artifacts
      uses: AButler/upload-release-assets@v2.0
      if: steps.release.outputs.id != ''
      with:
        files: './dist/**/*.tar.gz'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ steps.autotagger.outputs.tagname }}
    
    - name: Deploy
      if: steps.release.outputs.id != '' && env.IS_PRERELEASE != ''
      uses: peaceiris/actions-gh-pages@v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: dist
        CNAME: "butlerlogic.com"
    
    - name: Rollback
      if: failure()
      uses: author/action-rollback@stable
      with:
        id: ${{ steps.release.id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # - name: Success Notification
    #   if: success() && steps.autotagger.outputs.tagname != ''
    #   uses: pullreminders/slack-action@master
    #   env:
    #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    #   with:
    #     args: '{\"channel\":\"${{ secrets.SLACK_CHANNEL }}\",\"attachments\":[{\"fallback\":\"Released butlerlogic.com v${{ steps.autotagger.outputs.version }}.\",\"color\":\"#36a64f\",\"author_name\":\"${{ github.actor }}\",\"author_link\":\"https://github.com/${{ github.actor }}\",\"title\":\"https://butlerlogic.com\",\"title_link\":\"https://api.slack.com/\",\"fields\":[{\"title\":\"Version\",\"value\":\"${{ steps.autotagger.outputs.version }}\",\"short\": false},{\"title\":\"Repo\",\"value\":\"${{ github.repository }}\"},{\"title\":\"SHA\",\"value\":\"${{ github.sha }}\"},{\"title\":\"SHA\",\"value\":\"${{ github.sha }}\"}]}]}'
    # - name: Failure Notification
    #   if: failure() && steps.autotagger.outputs.tagname != '' && env.IS_PRERELEASE == ''
    #   uses: pullreminders/slack-action@master
    #   env:
    #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    #   with:
    #     args: '{\"channel\":\"${{ secrets.SLACK_CHANNEL }}\",\"attachments\":[{\"fallback\":\"Failed to release butlerlogic.com v${{ steps.autotagger.outputs.version }}.\",\"color\":\"#96281b\",\"author_name\":\"${{ github.actor }}\",\"author_link\":\"https://github.com/${{ github.actor }}\",\"pretext\":\"Failed to release.\",\"fields\":[{\"title\":\"Version\",\"value\":\"${{ steps.autotagger.outputs.version }}\",\"short\": false},{\"title\":\"Repo\",\"value\":\"${{ github.repository }}\"},{\"title\":\"SHA\",\"value\":\"${{ github.sha }}\"},{\"title\":\"SHA\",\"value\":\"${{ github.sha }}\"}]}]}'
    # - name: Inaction Notification
    #   if: steps.autotagger.outputs.tagname == ''
    #   uses: pullreminders/slack-action@master
    #   env:
    #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    #   with:
    #     args: '{\"channel\":\"${{ secrets.SLACK_CHANNEL }}\",\"attachments\":[{\"fallback\":\"${{ github.actor }} committed changes (${{ github.ref }}) to butlerlogic.com :file_cabinet:\",\"color\":\"#36a64f\",\"author_name\":\"${{ github.actor }}\",\"author_link\":\"https://github.com/${{ github.actor }}\",\"pretext\":\"Merged changes (${{ github.ref }}) to butlerlogic.com :file_cabinet:\",\"fields\":[{\"title\":\"Version\",\"value\":\"${{ steps.autotagger.outputs.version }}\",\"short\": false},{\"title\":\"Repo\",\"value\":\"${{ github.repository }}\"},{\"title\":\"SHA\",\"value\":\"${{ github.sha }}\"},{\"title\":\"SHA\",\"value\":\"${{ github.sha }}\"}]}]}'